// <auto-generated />
using System;
using EmployeesManagment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeesManagment.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220902214848_MySecondMigration")]
    partial class MySecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("EmpManagment.Models.Activities", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ActivityId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ActivityLocation")
                        .HasColumnType("text");

                    b.Property<string>("ActivityName")
                        .HasColumnType("text");

                    b.Property<int>("DepartmentId1")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentRefId")
                        .HasColumnType("integer");

                    b.HasKey("ActivityId");

                    b.HasIndex("DepartmentId1");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EmpManagment.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CardId1")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CardRefId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Checkin")
                        .HasColumnType("boolean");

                    b.HasKey("AttendanceId");

                    b.HasIndex("CardId1");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("EmpManagment.Models.Cards", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EmployeeId1")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("integer");

                    b.HasKey("CardId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("EmpManagment.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentLocation")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EmpManagment.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("EmployeeId"));

                    b.Property<Guid>("CardRefId")
                        .HasColumnType("uuid");

                    b.Property<int>("DepartmentId1")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentRefId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmpManagment.Models.EmployeesActivity", b =>
                {
                    b.Property<int>("EmployeeActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("EmployeeActivityId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ActivityId1")
                        .HasColumnType("integer");

                    b.Property<int>("ActivityRefId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId1")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeActivityId");

                    b.HasIndex("ActivityId1");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("EmployeesActivity");
                });

            modelBuilder.Entity("EmpManagment.Models.Activities", b =>
                {
                    b.HasOne("EmpManagment.Models.Departments", "DepartmentId")
                        .WithMany()
                        .HasForeignKey("DepartmentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentId");
                });

            modelBuilder.Entity("EmpManagment.Models.Attendance", b =>
                {
                    b.HasOne("EmpManagment.Models.Cards", "CardId")
                        .WithMany()
                        .HasForeignKey("CardId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardId");
                });

            modelBuilder.Entity("EmpManagment.Models.Cards", b =>
                {
                    b.HasOne("EmpManagment.Models.Employees", "EmployeeId")
                        .WithMany()
                        .HasForeignKey("EmployeeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeId");
                });

            modelBuilder.Entity("EmpManagment.Models.Employees", b =>
                {
                    b.HasOne("EmpManagment.Models.Departments", "DepartmentId")
                        .WithMany()
                        .HasForeignKey("DepartmentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentId");
                });

            modelBuilder.Entity("EmpManagment.Models.EmployeesActivity", b =>
                {
                    b.HasOne("EmpManagment.Models.Activities", "ActivityId")
                        .WithMany()
                        .HasForeignKey("ActivityId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpManagment.Models.Employees", "EmployeeId")
                        .WithMany()
                        .HasForeignKey("EmployeeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityId");

                    b.Navigation("EmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
